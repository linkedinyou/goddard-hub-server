extends ../layout

block content
	.row
		.col-md-12
			.row
				.col-md-6
					table.table
						tbody
							tr
								td(style="text-align:left;border-top:0;")
									strong Number (Serial)
								td(style="border-top:0;text-align:right;vertical-align:middle;width:30%;") #{item_obj.serial}
							tr
								td(style="text-align:left;",colspan="2")
									strong Name
									- if(item_obj.name)
										p #{item_obj.name}
									-else
										p N/A
							//
								tr
									td(style="text-align:left;",colspan="2")
										strong Location
										p Address Here
							tr
								td(style="text-align:left;")
									strong Group
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(locals.group_obj)
										a(href="/groups/" + group_obj.id) #{group_obj.name}
									-else
										a(href="/nodes/" + item_obj.id + '/edit') None
							//
								tr
									td(style="text-align:left;")
										strong Country
									td(style="text-align:right;vertical-align:middle;width:30%;") Kenya
							tr
								td(style="text-align:left;",colspan="2")
									strong Last Report
									p #{item_obj.lastping}
							tr
								td(style="text-align:left;",colspan="2")
									strong Provisioned
									p #{item_obj.createdAt}
							tr
								td(style="text-align:left;")
									strong BGAN Temp
								td(style="text-align:right;vertical-align:middle;width:30%;") 
									-if(metrics && metrics.devices && metrics.devices.bgan_temp)
										| #{metrics.devices.bgan_temp}<strong>C</strong>
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Uptime
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.uptime)
										| #{Math.round(metrics.system.uptime/60)} <strong style="font-size: 14px;">min</strong>
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong CPU #
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.cpus)
										| #{metrics.system.cpus}
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Free Disk Space
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.freedisk)
										| #{Math.round(metrics.system.freedisk/1024,2)}GB
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Total Disk Space
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.totaldisk)
										| #{Math.round(metrics.system.totaldisk/1024,2)}GB
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Free Memory
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.freemem)
										| #{Math.round(metrics.system.freemem/1000/1000,2)}MB
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Total Memory
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.totalmem)
										| #{Math.round(metrics.system.totalmem/1000/1000,2)}MB
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Load
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.load)
										-each load_number_item in metrics.system.load.split(' ')
											span.label.label-warning(style="margin-left:5px;") #{load_number_item}
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Relays
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && (metrics.system.relays || '').split(' ').length > 1)
										-each relay_item in (metrics.system.relays || '').split(' ')
											span.label.label-success(style="margin-left: 5px;") #{relay_item.toUpperCase()}
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong RAID Status
								td(style="text-align:right;vertical-align:middle;width:30%;")
									-if(metrics && metrics.system && metrics.system.raid)
										-each raid_item in metrics.system.raid.split(' ')
											span.label.label-success(style="margin-left: 5px;") #{raid_item.toUpperCase()}
									-else
										strong N/A
							tr
								td(style="text-align:left;")
									strong Status
								td(style="text-align:right;vertical-align:middle;width:30%;")
									span.label.label-success(style="margin-right:5px;") Active
									
				.col-md-6
					.pull-right
						a.btn.btn-primary(href="/nodes/" + item_obj.id + "/edit") Edit
					h4 Location:
					center
						img(src="https://maps.googleapis.com/maps/api/staticmap?center=" + item_obj.lat + "," + item_obj.lng + "&zoom=16&size=600x600&markers=color:red%7Clabel:C%7C" + item_obj.lat + "," + item_obj.lng + "",style="width: 100%;")
						p(style="margin-top: 10px;margin-bottom:10px;")
							br

							-if(item_obj && item_obj.lat && item_obj.lng)
								span(style="margin-right: 15px;") Latitude: <strong>#{item_obj.lat}</strong>
								span Longitude: <strong>#{item_obj.lng}</strong>
							-else
								span(style="margin-right: 15px;") Latitude: <strong>N/A</strong>
								span Longitude: <strong>N/A</strong>
							br

					-if(item_obj.description)
						h4 Notes:
						p #{item_obj.description}



			br
			br
			br
			br
